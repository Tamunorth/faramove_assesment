import 'package:flutter_riverpod/flutter_riverpod.dart';


class {{controllerNameClass.pascalCase}} extends StateNotifier<{{name.pascalCase}}State>{

  {{controllerNameClass.pascalCase}}(this.ref) : super({{name.pascalCase}}Initial());
  final StateNotifierProviderRef ref;

  Future<void> caller() async {
    try {
      state = {{name.pascalCase}}Loading();

      state = {{name.pascalCase}}Success();
    } catch (e) {
      state = {{name.pascalCase}}Error(e.toString());
    }
  }


}


final {{name.snakeCase}}Provider =
    StateNotifierProvider<{{controllerNameClass.pascalCase}}, {{name.pascalCase}}State>((ref) {
  return {{controllerNameClass.pascalCase}}(ref);
});



 abstract class {{name.pascalCase}}State {}

 class {{name.pascalCase}}Initial extends {{name.pascalCase}}State {}

 class {{name.pascalCase}}Loading extends {{name.pascalCase}}State {}

 class {{name.pascalCase}}Success extends {{name.pascalCase}}State {}

 class {{name.pascalCase}}Error extends {{name.pascalCase}}State {
   final String message;

   {{name.pascalCase}}Error(this.message);
 }
